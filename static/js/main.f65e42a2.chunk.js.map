{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/AboutContact.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","style","color","Link","to","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showClick","deleteUser","delete","t0","_this2","_this$props$contact","name","email","phone","cursor","onClick","float","bind","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","console","log","AboutContact","class","NotFound","_ref","location","pathname","Test","title","body","fetch","then","response","json","App","HashRouter","context_Provider","layout_Header","Switch","Route","exact","path","component","Boolean","window","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f65e42a2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\n\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-success mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\" style={{ color: 'white' }}>\n            <Link className=\"nav-link\" to=\"/\" >\n            <i className=\"fas fa-home\"></i>\n            Home\n            </Link>\n          </li>\n          <li className=\"nav-item\" style={{ color: 'white' }}>\n            <Link className=\"nav-link\" to=\"/aboutcontact\">\n            <i className=\"fas fa-question\"></i>\n            About</Link>\n          </li>\n          <li className=\"nav-item\" style={{ color: 'white' }}>\n            <Link className=\"nav-link\" to=\"/contact/add\">\n            <i className=\"fas fa-plus\"></i>\n            Add Contact</Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nHeader.defaultProps = {\n  branding: \"App\"\n}\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport axios from 'axios';\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            }\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n\n            }\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact  )\n\n            }\n        default:\n            return state;\n\n\n    }\n}\nexport class Provider extends Component {\n    state = {\n        contacts: [],\n        dispatch: action => {\n            this.setState(state => reducer(state, action))\n        }\n    }\n    async componentDidMount() {\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n        this.setState({\n            contacts: res.data\n        })\n\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nclass Contact extends Component {\n  state = {\n    showClick: false\n  }\n  deleteUser = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n      dispatch({ type: 'DELETE_CONTACT', payload: id })\n    } catch (e) {\n      dispatch({ type: 'DELETE_CONTACT', payload: id })\n    }\n\n  }\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showClick } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mt-3\">\n              <div className=\"card-body\">\n                <h3 className=\"card-title\">{name}\n                  <i\n                    className=\"fas fa-caret-down\"\n                    style={{ cursor: 'pointer' }}\n                    onClick={() => this.setState({ showClick: !this.state.showClick })}\n                  ></i>\n                  <i\n                    className=\"fas fa-times\"\n                    style={{ float: 'right', cursor: 'pointer', color: 'red' }}\n                    onClick={this.deleteUser.bind(this, id, dispatch)}\n                  ></i>\n                  <Link\n                    to={`contact/edit/${id}`}>\n                    <i\n                      className=\"fas fa-pen\"\n                      style={{ float: 'right', cursor: 'pointer', marginRight: '10px', color: 'black' }}\n                    ></i>\n\n                  </Link>\n\n\n\n                </h3>\n                {showClick ? (<ul className=\"list-group \">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>) : null}\n\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n}\n\nexport default Contact; ","import React, { Component } from 'react';\nimport Contact from '../contacts/Contact';\nimport { Consumer } from '../../context';\n\n\n\nclass Contacts extends Component {\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const {contacts} =value\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-4\"><span className=\"text-danger\">Contact </span>list</h1>\n                            {contacts.map(contact =>\n                                <Contact\n                                    key={contact.id}\n                                    contact={contact}    \n                                />\n                            )}\n                        </React.Fragment>\n                    )\n                }\n                }\n            </Consumer>\n        )\n    }\n}\n\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'\n\n\n\nfunction TextInputGroup(props) {\n    const {\n        label,\n        type,\n        placeholder,\n        name,\n        value,\n        onChange,\n        error,\n\n\n    } = props;\n\n    return (\n        <div>\n            <div className=\"form-group\">\n                <label htmlFor=\"name\">{label}</label>\n                <input\n                    type={type}\n                    placeholder={placeholder}\n                    name={name}\n                    value={value}\n                    onChange={onChange}\n                    className={classnames('form-control form-control-lg',\n                        { 'is-invalid': error })}\n\n\n                />\n                {error && <div className=\"invalid-feedback\">{error}</div>}\n            </div>\n        </div>\n    )\n}\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.string.isRequired,\n    error: PropTypes.string.isRequired\n}\n\n\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport uuid from 'uuid';\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios'\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const { errors, name, email, phone } = this.state;\n        //Check for Errors\n        if (name === '') {\n            this.setState({ errors: { name: 'Name is required' } });\n            return;\n        }\n        if (email === '') {\n            this.setState({ errors: { email: 'Email is required' } });\n            return;\n        }\n        if (phone === '') {\n            this.setState({ errors: { phone: 'Phone is required' } });\n            return;\n        }\n        const newContact = {\n            name,\n            email,\n            phone,\n\n\n        };\n\n        const res = await axios.post(`https://jsonplaceholder.typicode.com/users`, newContact)\n        dispatch({ type: 'ADD_CONTACT', payload: res.data })\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        }\n        );\n\n       \n\n\n\n        this.props.history.push(\"/\")\n\n    }\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value })\n\n\n\n    render() {\n        const { errors, name, phone, email } = this.state;\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value\n                    return (\n                        < div className=\"card\" >\n                            <div className=\"card-header\"><h5>Add Contact</h5></div>\n                            <div className=\"card-body\">\n                                <form\n                                    onSubmit={this.onSubmit.bind(this, dispatch)}\n                                >\n                                    <TextInputGroup\n                                        label=\"Name\"\n                                        type=\"text\"\n                                        placeholder=\"Enter your Name ...\"\n                                        name=\"name\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter your Email ...\"\n                                        name=\"email\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Phone\"\n                                        type=\"text\"\n                                        placeholder=\"Enter your Phone ...\"\n                                        name=\"phone\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n\n                                    <input\n                                        type=\"submit\"\n                                        value=\"Add contact\"\n                                        className=\"btn btn-block bg-light border\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    )\n\n                }\n\n                }\n            </Consumer>\n        )\n    }\n}\n\nexport default AddContact;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios'\n\nclass EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n    async componentDidMount() {\n        const { id } = this.props.match.params\n        console.log(id)\n\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n        const contact = res.data;\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n    }\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const { errors, name, email, phone } = this.state;\n        //Check for Errors\n        if (name === '') {\n            this.setState({ errors: { name: 'Name is required' } });\n            return;\n        }\n        if (email === '') {\n            this.setState({ errors: { email: 'Email is required' } });\n            return;\n        }\n        if (phone === '') {\n            this.setState({ errors: { phone: 'Phone is required' } });\n            return;\n        }\n        const updateContact = {\n            name,\n            email,\n            phone\n        }\n        const { id } = this.props.match.params;\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,\n            updateContact)\n        dispatch({type:'UPDATE_CONTACT', payload:res.data})\n\n\n\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        })\n        this.props.history.push('/')\n    }\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value })\n    render() {\n        const { errors, name, phone, email } = this.state;\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value\n                    return (\n                        < div className=\"card\" >\n                            <div className=\"card-header\"><h5>Edit Contact</h5></div>\n                            <div className=\"card-body\">\n                                <form\n                                    onSubmit={this.onSubmit.bind(this, dispatch)}\n                                >\n                                    <TextInputGroup\n                                        label=\"Name\"\n                                        type=\"text\"\n                                        placeholder=\"Enter your Name ...\"\n                                        name=\"name\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter your Email ...\"\n                                        name=\"email\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Phone\"\n                                        type=\"text\"\n                                        placeholder=\"Enter your Phone ...\"\n                                        name=\"phone\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    <input\n                                        type=\"submit\"\n                                        value=\"Update contact\"\n                                        className=\"btn btn-block bg-light border\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }\n                }\n            </Consumer>\n        )\n    }\n}\n\nexport default EditContact;","import React from 'react'\n\nexport const AboutContact = () =>\n\n    <div >\n        <h2 class=\"display-2\">The Contact Manager</h2>\n        <div className=\"lead\">\n            Version of application is 1.0.0\n        </div>\n\n\n    </div>\n\n\n","import React, { Component } from 'react'\n\nexport const NotFound = ({ location }) =>\n    <section>\n        <div className=\"notfound-404\">\n            <h1>Resource absolutely not found at {location.pathname}</h1>\n            <div className=\"lead\">We are so sorry</div>\n        </div>\n    </section>","import React, { Component } from 'react'\n\nclass Test extends Component {\n    state = {\n        title: '',\n        body: ''\n    }\n\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\n            .then(response => response.json())\n            .then(data => this.setState({\n                title: data.title,\n                body: data.body\n            }))\n    }\n\n\n\n\n\n\n    //     \n\n    // componentWillMount(){\n    //     console.log('ComponentWillMount')\n    // }\n    // componentDidUpdate(){\n    //     console.log('ComponentDidUpdate')\n    // }\n    // componentWillUpdate(){\n    //     console.log('ComponentWillUpdate')\n    // }\n    // componentWillReceiveProps(nextProps, nextState){\n    //     console.log('Component will receive props..')\n    // }\n    // static getDerivedStateFromProps(nextProps, prevState){\n    //     return null   \n    // }\n    // getSnapshotBeforeUpdate(prevProps, prevState){\n    //     console.log('Get snapshot before update')\n    // }\n\n\n\n    render() {\n        const { title, body } = this.state\n        return (\n            <div>\n                <h1>{title}</h1>\n                <p>{body}</p>\n            </div>\n        )\n    }\n}\n\nexport default Test\n","import React, { Component } from \"react\";\nimport Header from './components/layout/Header'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport \"./App.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\"\nimport { Provider } from './context';\nimport { HashRouter as Router, Route, Link, HashRouter, Switch, Redirect } from 'react-router-dom'\nimport {\n  Home,\n  About,\n  Events,\n  Products,\n  Contact,\n  Whoops404,\n  AboutMenu\n} from './components/react-router-dom/PageTemplate'\nimport { MainMenu } from './components/react-router-dom/MainMenu'\nimport { PageTemplate } from './components/react-router-dom/PageTemplate'\nimport { AboutContact } from \"./components/pages/AboutContact\"\nimport { NotFound } from './components/pages/NotFound'\nimport Test from './components/test/Test'\n\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      // Books exersises\n      // <HashRouter>\n      //   <div className=\"main container\">\n      //     <Switch>\n      //       <Route exact path=\"/\" component={Home} />\n      //       <Route path=\"/about\" component={About} />\n      //       <Redirect from=\"/history\" to=\"/about/history\" />\n      //       <Redirect from=\"/services\" to=\"/about/services\" />\n      //       <Redirect from=\"/location\" to=\"/about/location\" />\n      //       <Route path=\"/events\" component={Events} />\n      //       <Route path=\"/products\" component={Products} />\n      //       <Route path=\"/contact\" component={Contact} />\n      //     </Switch>\n      //     <Route component={Whoops404} /> \n      //   </div>\n      // </HashRouter>\n\n\n      // Brad Traversy's courses\n\n      <Router>\n        <Provider>\n\n          <div className='container col-6'>\n\n\n            <Header branding='Contact Manager' />\n            <Switch>\n              {/* <AddContact />\n            <Contacts /> */}\n              <Route exact path=\"/\" component={Contacts} />\n              <Route path=\"/aboutcontact\" component={AboutContact} />\n              <Route path=\"/contact/add\" component={AddContact} />\n              <Route path=\"/test\" component={Test} />\n              <Route path=\"/contact/edit/:id\" component={EditContact} />\n\n              <Route component={NotFound} />\n\n            </Switch>\n\n          </div>\n        </Provider>\n      </Router>\n\n\n\n    )\n\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}